{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Tetris.min.js","webpack:///webpack/bootstrap c346b203414f8701b87a","webpack:///./src/index.js","webpack:///./src/Tetrominos.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","sleep","milliseconds","start","Date","getTime","i","Object","defineProperty","value","_createClass","defineProperties","target","props","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_Tetrominos","Tetris","canvas","ctx","getContext","scaleFactor","rows","columns","gameBoard","rowsTemp","Array","fill","push","x","y","colour","scaledX","scaledY","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","tetromino","xOffset","yOffset","j","matrix","coloursMap","E","B","O","P","R","Y","C","colourOfBlock","drawRect","period","endTime","counter","renderGameBoard","tetL","TetrominoL","insertTetromino","rotateClockwise","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Tetromino","orientation","n","newArray","updateOrientation","rotatingClockwise","orientationArray","oldOrientation","newOrientIndex","indexOf","_Tetromino","_this","getPrototypeOf"],"mappings":"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","file":"Tetris.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tetris\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tetris\"] = factory();\n\telse\n\t\troot[\"Tetris\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tetris\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tetris\"] = factory();\n\telse\n\t\troot[\"Tetris\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Tetrominos = __webpack_require__(1);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Tetris = function () {\n\t  function Tetris(canvas) {\n\t    _classCallCheck(this, Tetris);\n\t\n\t    this.ctx = canvas.getContext(\"2d\");\n\t    this.scaleFactor = 32;\n\t    this.rows = 20;\n\t    this.columns = 10;\n\t    this.gameBoard = []; //make 10*20 game board\n\t    for (var i = 0; i < this.rows; i++) {\n\t      var rowsTemp = Array(this.columns).fill('E');\n\t      this.gameBoard.push(rowsTemp);\n\t    }\n\t  }\n\t\n\t  _createClass(Tetris, [{\n\t    key: 'drawRect',\n\t    value: function drawRect(x, y, colour) {\n\t      var scaledX = x * this.scaleFactor;\n\t      var scaledY = y * this.scaleFactor;\n\t      this.ctx.fillStyle = colour || 'pink';\n\t      this.ctx.fillRect(scaledX, scaledY, this.scaleFactor, this.scaleFactor);\n\t\n\t      this.ctx.strokeStyle = \"white\";\n\t      this.ctx.lineWidth = 0.5;\n\t      this.ctx.strokeRect(scaledX, scaledY, this.scaleFactor, this.scaleFactor);\n\t    }\n\t  }, {\n\t    key: 'insertTetromino',\n\t    value: function insertTetromino(tetromino) {\n\t      var xOffset = tetromino.x;\n\t      var yOffset = tetromino.y;\n\t\n\t      for (var i = 0; i < 3; i++) {\n\t        for (var j = 0; j < 3; j++) {\n\t          this.gameBoard[xOffset + i][yOffset + j] = tetromino.matrix[i][j];\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderGameBoard',\n\t    value: function renderGameBoard() {\n\t\n\t      var coloursMap = {\n\t        'E': 'pink',\n\t        'B': '#8CA4D4',\n\t        'O': '#FDCDA7',\n\t        'P': '#C2A1DA',\n\t        'R': '#EF8B8B',\n\t        'Y': '#FAF1A2',\n\t        'C': '#D6E9F8'\n\t      };\n\t\n\t      for (var i = 0; i < this.rows; i++) {\n\t        for (var j = 0; j < this.columns; j++) {\n\t          var colourOfBlock = coloursMap[this.gameBoard[i][j]];\n\t          this.drawRect(j, i, colourOfBlock);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'gameLoop',\n\t    value: function gameLoop(period, endTime, counter) {}\n\t  }, {\n\t    key: 'run',\n\t    value: function run() {\n\t      this.renderGameBoard();\n\t      var tetL = new _Tetrominos.TetrominoL();\n\t\n\t      this.insertTetromino(tetL);\n\t      this.renderGameBoard();\n\t\n\t      tetL.rotateClockwise();\n\t      this.insertTetromino(tetL);\n\t      this.renderGameBoard();\n\t\n\t      sleep(3000);\n\t\n\t      tetL.rotateClockwise();\n\t      this.insertTetromino(tetL);\n\t      this.renderGameBoard();\n\t    }\n\t  }]);\n\t\n\t  return Tetris;\n\t}();\n\t\n\texports.default = Tetris;\n\t\n\t\n\tfunction sleep(milliseconds) {\n\t  var start = new Date().getTime();\n\t  for (var i = 0; i < 1e7; i++) {\n\t    if (new Date().getTime() - start > milliseconds) {\n\t      break;\n\t    }\n\t  }\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Tetromino = exports.Tetromino = function () {\n\t  function Tetromino() {\n\t    _classCallCheck(this, Tetromino);\n\t\n\t    this.orientation = 'u';\n\t    this.matrix = [];\n\t    this.x = 3;\n\t    this.y = 0;\n\t  }\n\t\n\t  _createClass(Tetromino, [{\n\t    key: 'rotateClockwise',\n\t    value: function rotateClockwise() {\n\t      var n = this.matrix.length;\n\t      var newArray = [[[], [], []], [[], [], []], [[], [], []]];\n\t\n\t      for (var i = 0; i < n; i++) {\n\t        for (var j = 0; j < n; j++) {\n\t          newArray[i][j] = this.matrix[n - j - 1][i];\n\t        }\n\t      }\n\t\n\t      this.matrix = newArray;\n\t      this.updateOrientation(true);\n\t    }\n\t  }, {\n\t    key: 'rotateCounterClockwise',\n\t    value: function rotateCounterClockwise() {\n\t      var n = this.matrix.length;\n\t      var newArray = [[[], [], []], [[], [], []], [[], [], []]];\n\t\n\t      for (var i = 0; i < n; i++) {\n\t        for (var j = 0; j < n; j++) {\n\t          newArray[i][j] = this.matrix[j][n - i - 1];\n\t        }\n\t      }\n\t\n\t      this.matrix = newArray;\n\t      this.updateOrientation(false);\n\t    }\n\t  }, {\n\t    key: 'updateOrientation',\n\t    value: function updateOrientation(rotatingClockwise) {\n\t      var orientationArray = ['u', 'r', 'd', 'l'];\n\t      var oldOrientation = this.orientation;\n\t\n\t      if (rotatingClockwise) {\n\t        var newOrientIndex = (orientationArray.indexOf(oldOrientation) + 1) % 4;\n\t        this.orientation = orientationArray[newOrientIndex];\n\t      } else {\n\t        var _newOrientIndex = orientationArray.indexOf(oldOrientation) - 1; //% does not work on negative numbers\n\t        _newOrientIndex === -1 ? _newOrientIndex = 3 : _newOrientIndex;\n\t        this.orientation = orientationArray[_newOrientIndex];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'moveDown',\n\t    value: function moveDown() {\n\t      this.y -= 1;\n\t    }\n\t  }]);\n\t\n\t  return Tetromino;\n\t}();\n\t\n\tvar TetrominoL = exports.TetrominoL = function (_Tetromino) {\n\t  _inherits(TetrominoL, _Tetromino);\n\t\n\t  function TetrominoL() {\n\t    _classCallCheck(this, TetrominoL);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TetrominoL.__proto__ || Object.getPrototypeOf(TetrominoL)).call(this));\n\t\n\t    _this.colour = 'B';\n\t    _this.matrix = [['B', 0, 0], ['B', 'B', 'B'], [0, 0, 0]];\n\t    return _this;\n\t  }\n\t\n\t  return TetrominoL;\n\t}(Tetromino);\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** Tetris.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c346b203414f8701b87a\n **/","import {TetrominoL} from 'Tetrominos'\n\nexport default class Tetris {\n\n  constructor(canvas) {\n    this.ctx = canvas.getContext(\"2d\");\n    this.scaleFactor = 32\n    this.rows = 20\n    this.columns = 10\n    this.gameBoard = []; //make 10*20 game board\n    for (let i = 0; i < this.rows; i++)\n    {\n      const rowsTemp = Array(this.columns).fill('E')\n      this.gameBoard.push(rowsTemp)\n    }\n\n  }\n  drawRect(x,y, colour) {\n    const scaledX = x * this.scaleFactor\n    const scaledY = y * this.scaleFactor\n    this.ctx.fillStyle = colour || 'pink'\n    this.ctx.fillRect(scaledX,scaledY, this.scaleFactor, this.scaleFactor);\n\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.lineWidth   = 0.5;\n    this.ctx.strokeRect(scaledX,scaledY, this.scaleFactor, this.scaleFactor);\n  }\n\n  insertTetromino(tetromino)\n  {\n    const xOffset = tetromino.x\n    const yOffset = tetromino.y\n\n    for (let i = 0;i < 3;i++)\n    {\n      for (let j = 0; j < 3; j++)\n      {\n        this.gameBoard[xOffset + i][yOffset + j] = tetromino.matrix[i][j]\n      }\n    }\n  }\n\n  renderGameBoard()\n  {\n\n    const coloursMap = {\n      'E':'pink',\n      'B':'#8CA4D4',\n      'O':'#FDCDA7',\n      'P':'#C2A1DA',\n      'R':'#EF8B8B',\n      'Y':'#FAF1A2',\n      'C':'#D6E9F8'\n    };\n\n    for (let i = 0; i < this.rows; i++)\n    {\n      for (let j = 0; j < this.columns; j++)\n      {\n        const colourOfBlock = coloursMap[this.gameBoard[i][j]]\n        this.drawRect(j, i, colourOfBlock)\n      }\n    }\n  }\n\n  gameLoop(period, endTime, counter)\n  {\n\n\n\n\n\n  }\n\n  run()\n  {\n    this.renderGameBoard()\n    let tetL = new TetrominoL()\n\n    this.insertTetromino(tetL)\n    this.renderGameBoard()\n\n    tetL.rotateClockwise()\n    this.insertTetromino(tetL)\n    this.renderGameBoard()\n\n    sleep(3000)\n\n    tetL.rotateClockwise()\n    this.insertTetromino(tetL)\n    this.renderGameBoard()\n\n\n\n\n\n\n  }\n\n}\n\nfunction sleep(milliseconds) {\n  var start = new Date().getTime();\n  for (var i = 0; i < 1e7; i++) {\n    if ((new Date().getTime() - start) > milliseconds){\n      break;\n    }\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","export class Tetromino {\n\n  constructor() {\n    this.orientation = 'u'\n    this.matrix = []\n    this.x = 3\n    this.y = 0\n  }\n\n  rotateClockwise()\n  {\n    const n = this.matrix.length\n    let newArray = [\n        [[],[],[]],\n        [[],[],[]],\n        [[],[],[]]\n    ]\n\n    for(let i = 0; i < n;i++) {\n        for(let j = 0; j < n; j++) {\n            newArray[i][j] = this.matrix[n - j - 1][i];\n        }\n    }\n\n    this.matrix = newArray\n    this.updateOrientation(true)\n\n  }\n\n  rotateCounterClockwise()\n  {\n    const n = this.matrix.length\n    let newArray = [\n      [[],[],[]],\n      [[],[],[]],\n      [[],[],[]]\n    ]\n\n    for(let i = 0; i < n;i++) {\n      for(let j = 0; j < n; j++) {\n        newArray[i][j] = this.matrix[j][n - i - 1];\n      }\n    }\n\n    this.matrix = newArray\n    this.updateOrientation(false)\n  }\n\n  updateOrientation(rotatingClockwise)\n  {\n    const orientationArray = ['u','r','d','l']\n    const oldOrientation = this.orientation\n\n\n\n    if (rotatingClockwise)\n    {\n      const newOrientIndex = (orientationArray.indexOf(oldOrientation)+1) % 4;\n      this.orientation = orientationArray[newOrientIndex]\n    }\n    else\n    {\n      let newOrientIndex = (orientationArray.indexOf(oldOrientation)-1)  //% does not work on negative numbers\n      newOrientIndex === -1 ? newOrientIndex = 3 : newOrientIndex\n      this.orientation = orientationArray[newOrientIndex]\n    }\n\n  }\n\n  moveDown()\n  {\n    this.y -= 1\n  }\n  \n\n  \n\n\n \n  \n\n}\n\nexport class TetrominoL extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'B'\n    this.matrix = [\n        ['B',0,0],\n        ['B','B','B'],\n        [0,0,0]\n    ]\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Tetrominos.js\n **/"],"sourceRoot":""}