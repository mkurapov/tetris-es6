{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 75bc53297b1df6f643dd","webpack:///./src/index.js","webpack:///./src/Tetrominos.js"],"names":["KEY","ESC","SPACE","LEFT","UP","RIGHT","DOWN","coloursMap","Tetris","canvas","ctx","getContext","scaleFactor","speed","gameState","rows","columns","gameBoard","currentTet","i","rowsTemp","Array","fill","push","document","addEventListener","ev","keyDown","x","y","colour","scaledX","scaledY","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","insertTetromino","renderGameBoard","piece","xOffset","yOffset","n","matrix","length","blockXOffset","blockYOffset","blocktoCheck","colourOfBlock","drawRect","rotatingClockwise","clearTetromino","rotate","redrawPiece","movingRight","moveRight","checkEmpty","moveLeft","moveDown","moveUp","keyCode","handleRotation","handleDrop","handleMove","Tetromino","orientation","newArray","j","updateOrientation","orientationArray","oldOrientation","newOrientIndex","indexOf","TetrominoL","TetrominoJ","TetrominoZ","TetrominoS"],"mappings":"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","file":"Tetris.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tetris\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tetris\"] = factory();\n\telse\n\t\troot[\"Tetris\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 75bc53297b1df6f643dd\n **/","import {Tetromino, TetrominoL, TetrominoJ, TetrominoZ, TetrominoS} from 'Tetrominos'\n\nconst KEY     = { ESC: 27, SPACE: 32, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40 }\nconst coloursMap = {\n  'E':'#f4eded',\n  'B':'#8CA4D4',\n  'O':'#FDCDA7',\n  'P':'#C2A1DA',\n  'R':'#EF8B8B',\n  'Y':'#FAF1A2',\n  'C':'#D6E9F8',\n  'G':'#C5D9A6'\n};\n\nexport default class Tetris {\n\n  constructor(canvas) {\n    this.canvas = canvas\n    this.ctx = canvas.getContext(\"2d\")\n    this.scaleFactor = 32\n    this.speed = 10\n    this.gameState = 1 //1 playing, 0 over\n    this.rows = 20\n    this.columns = 10\n    this.gameBoard = []; //make 10*20 game board\n    this.currentTet = {}\n\n    for (let i = 0; i < this.columns; i++)\n    {\n      const rowsTemp = Array(this.rows).fill('E')\n      this.gameBoard.push(rowsTemp)\n    }\n\n    document.addEventListener('keydown', (ev) => this.keyDown(ev), false);\n  }\n  drawRect(x,y, colour) {\n    const scaledX = x * this.scaleFactor\n    const scaledY = y * this.scaleFactor\n    this.ctx.fillStyle = colour;\n    this.ctx.fillRect(scaledX,scaledY, this.scaleFactor, this.scaleFactor);\n\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.lineWidth   = 0.5;\n    this.ctx.strokeRect(scaledX,scaledY, this.scaleFactor, this.scaleFactor);\n  }\n\n  redrawPiece()\n  {\n    this.insertTetromino()\n    this.renderGameBoard()\n  }\n\n  checkEmpty(piece)\n  {\n    const xOffset = piece.x\n    const yOffset = piece.y\n    const n = piece.matrix.length\n\n    for (let y = 0; y < n; y++)\n    {\n      for (let x = 0; x < n; x++)\n      {\n        const blockXOffset = xOffset + x\n        const blockYOffset = yOffset + y\n\n        if ((blockXOffset >= this.columns) || (blockYOffset < 0) || (blockYOffset >= this.rows) || (blockXOffset < 0)) return false\n\n        let blocktoCheck = this.gameBoard[blockXOffset][blockYOffset];\n        if ((blocktoCheck !== 'E')) return false\n      }\n    }\n\n    return true\n  }\n\n  clearTetromino()\n  {\n    const xOffset = this.currentTet.x\n    const yOffset = this.currentTet.y\n\n    for (let y = 0;y < 3;y++)\n    {\n      for (let x = 0; x < 3; x++)\n      {\n        this.gameBoard[xOffset + x][yOffset + y] = 'E'\n      }\n    }\n  }\n\n  insertTetromino()\n  {\n    const xOffset = this.currentTet.x\n    const yOffset = this.currentTet.y\n\n    for (let y = 0;y < 3;y++)\n    {\n      for (let x = 0; x < 3; x++)\n      {\n        this.gameBoard[xOffset + x][yOffset + y] = this.currentTet.matrix[x][y]\n      }\n    }\n  }\n\n  renderGameBoard()\n  {\n\n\n\n    for (let y = 0; y < this.rows; y++)\n    {\n      for (let x = 0; x < this.columns; x++)\n      {\n        const colourOfBlock = coloursMap[this.gameBoard[x][y]]\n        this.drawRect(x, y, colourOfBlock)\n      }\n    }\n  }\n\n  handleRotation(rotatingClockwise)\n  {\n    this.clearTetromino();\n    this.currentTet.rotate()\n    this.redrawPiece()\n  }\n\n\n  handleMove(movingRight)\n  {\n\n    this.clearTetromino();\n\n    if (movingRight)\n    {\n      this.currentTet.moveRight()\n\n      if (!this.checkEmpty(this.currentTet)) this.currentTet.moveLeft()\n\n    }\n    else\n    {\n      this.currentTet.moveLeft()\n      if (!this.checkEmpty(this.currentTet)) this.currentTet.moveRight()\n\n    }\n\n    this.redrawPiece()\n\n\n  }\n\n  handleDrop()\n  {\n    this.clearTetromino()\n    this.currentTet.moveDown()\n\n    if (!this.checkEmpty(this.currentTet)) this.currentTet.moveUp()\n\n    this.redrawPiece()\n  }\n\n\n\n\n  keyDown(ev) {\n      switch(ev.keyCode) {\n        case KEY.UP:\n          this.handleRotation(true);\n          break;\n        case KEY.DOWN:\n          this.handleDrop();\n          break;\n        case KEY.RIGHT:\n          this.handleMove(true);\n          break;\n        case KEY.LEFT:\n          this.handleMove(false);\n          break;\n      }\n\n\n  }\n\n  run()\n  {\n\n\n    this.currentTet = new TetrominoS()\n\n    this.insertTetromino()\n     this.renderGameBoard()\n\n\n\n  }\n\n}\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","export class Tetromino {\n\n  constructor() {\n    this.orientation = 'u'\n    this.matrix = []\n    this.x = 3\n    this.y = 1\n  }\n\n  rotate()\n  {\n    const n = this.matrix.length\n    let newArray = [\n        [[],[],[]],\n        [[],[],[]],\n        [[],[],[]]\n    ]\n\n    for(let i = 0; i < n;i++) {\n        for(let j = 0; j < n; j++) {\n            newArray[i][j] = this.matrix[n - j - 1][i];\n        }\n    }\n\n    this.matrix = newArray\n    this.updateOrientation()\n\n  }\n  \n\n  updateOrientation()\n  {\n    const orientationArray = ['u','r','d','l']\n    const oldOrientation = this.orientation\n    \n    const newOrientIndex = (orientationArray.indexOf(oldOrientation)+1) % 4;\n    this.orientation = orientationArray[newOrientIndex]\n  }\n\n  \n  moveRight(){this.x += 1}\n  moveLeft(){this.x -= 1}\n  moveDown(){this.y += 1}\n  moveUp(){this.y -= 1}\n\n\n\n\n}\n\nexport class TetrominoL extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'B'\n    this.matrix = [\n        ['B','E','E'],\n        ['B','B','B'],\n        ['E','E','E']\n    ]\n  }\n}\n\nexport class TetrominoJ extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'J'\n    this.matrix = [\n      ['E','E','O'],\n      ['O','O','O'],\n      ['E','E','E']\n    ]\n  }\n}\n\nexport class TetrominoZ extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'R'\n    this.matrix = [\n      ['R','R','E'],\n      ['E','R','R'],\n      ['E','E','E']\n    ]\n  }\n}\n\nexport class TetrominoS extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'G'\n    this.matrix = [\n      ['E','G','G'],\n      ['G','G','E'],\n      ['E','E','E']\n    ]\n  }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Tetrominos.js\n **/"],"sourceRoot":""}