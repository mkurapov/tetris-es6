{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 90690c15b9f75a4897c6","webpack:///./src/index.js","webpack:///./src/Tetrominos.js"],"names":["KEY","ESC","SPACE","LEFT","UP","RIGHT","DOWN","coloursMap","Tetris","canvas","rows","columns","height","window","innerHeight","width","scaleFactor","ctx","getContext","speed","score","gameBoard","currentTet","resetGameBoard","document","addEventListener","ev","keyDown","resizeCanvas","i","rowsTemp","Array","fill","push","renderGameBoard","x","y","colour","scaledX","scaledY","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","font","textAlign","fillText","colourOfBlock","drawRect","drawScore","insertTetromino","piece","n","matrix","length","boardXOffset","boardYOffset","bounds","Error","e","clearTetromino","copyPiece","orientation","rotate","validMove","bottomEmpty","redrawPiece","boardYOffsetBelow","gameBoardCopy","row","filteredRow","filter","val","splice","unshift","checkRows","tetrominos","newTet","Math","floor","random","direction","moveDown","moveRight","moveLeft","spawnTetromino","keyCode","handleRotation","makeMove","animateLoop","setTimeout","requestAnimationFrame","Tetromino","newArray","map","updateOrientation","orientationArray","oldOrientation","newOrientIndex","indexOf","TetrominoL","TetrominoJ","TetrominoZ","TetrominoS","TetrominoI","TetrominoO","TetrominoT"],"mappings":"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","file":"Tetris.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tetris\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tetris\"] = factory();\n\telse\n\t\troot[\"Tetris\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 90690c15b9f75a4897c6\n **/","import {Tetromino, TetrominoL, TetrominoJ, TetrominoZ, TetrominoS, TetrominoI, TetrominoO, TetrominoT} from 'Tetrominos'\n\nconst KEY     = { ESC: 27, SPACE: 32, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40 }\nconst coloursMap = {\n  'E':'white',\n  'B':'#8CA4D4',\n  'O':'#FDCDA7',\n  'P':'#C2A1DA',\n  'R':'#EF8B8B',\n  'Y':'#FAF1A2',\n  'C':'#D6E9F8',\n  'G':'#C5D9A6'\n};\n\nexport default class Tetris {\n\n  constructor(canvas) {\n    this.canvas = canvas\n    this.rows = 20\n    this.columns = 10\n\n    this.canvas.height = window.innerHeight\n    this.canvas.width = (window.innerHeight)/2\n    this.scaleFactor = (this.canvas.height/this.rows)\n\n    this.ctx = canvas.getContext(\"2d\")\n\n    this.speed = 3\n    this.score = 0\n\n    this.gameBoard = []; //make 10*20 game board\n    this.currentTet = {}\n\n    this.resetGameBoard()\n\n    document.addEventListener('keydown', (ev) => this.keyDown(ev), false);\n    window.addEventListener('resize', (ev) => this.resizeCanvas(ev), false);\n\n  }\n\n  resetGameBoard()\n  {\n    this.gameBoard = []\n    for (let i = 0; i < this.rows; i++)\n    {\n      const rowsTemp = Array(this.columns).fill('E')\n      this.gameBoard.push(rowsTemp)\n    }\n    this.score = 0\n    this.renderGameBoard()\n  }\n\n  resizeCanvas(ev)\n  {\n    this.canvas.height = window.innerHeight\n    this.canvas.width = (window.innerHeight)/2\n    this.scaleFactor = (this.canvas.height/this.rows)\n    this.renderGameBoard()\n  }\n\n\n  drawRect(x,y, colour) {\n    const scaledX = x * this.scaleFactor\n    const scaledY = y * this.scaleFactor\n    this.ctx.fillStyle = colour;\n    this.ctx.fillRect(scaledX,scaledY, this.scaleFactor, this.scaleFactor);\n\n    this.ctx.strokeStyle = \"white\";\n    this.ctx.lineWidth   = 0.5;\n    this.ctx.strokeRect(scaledX,scaledY, this.scaleFactor, this.scaleFactor);\n  }\n\n  drawScore()\n  {\n    this.ctx.font = `${this.scaleFactor*0.8}px Karla`\n    this.ctx.fillStyle = '#aaaaaa';\n    this.ctx.textAlign = 'right'\n    this.ctx.fillText(this.score, (this.scaleFactor*9.3), (this.scaleFactor*1.3))\n\n  }\n\n  renderGameBoard()\n  {\n    for (let y = 0; y < this.rows; y++)\n    {\n      for (let x = 0; x < this.columns; x++)\n      {\n        const colourOfBlock = coloursMap[this.gameBoard[y][x]]\n        this.drawRect(x, y, colourOfBlock)\n      }\n    }\n    this.drawScore()\n  }\n\n\n  redrawPiece()\n  {\n    this.insertTetromino()\n    this.renderGameBoard()\n  }\n\n  validMove(piece)\n  {\n    const n = piece.matrix.length\n    for (let y = 0;y < n;y++)\n    {\n      for (let x = 0; x < n; x++)\n      {\n        const boardXOffset = piece.x + x\n        const boardYOffset = piece.y + y\n\n        if (piece.matrix[y][x] !== 'E') {\n\n          //try to get gameboard at board offsets, if exception, then piece is out of bounds\n          try {\n            const bounds = this.gameBoard[boardYOffset][boardXOffset]\n\n            if ((bounds !== 'E') || (boardXOffset === this.columns)) {\n              throw new Error('hit something')\n            }\n\n\n          } catch (e) {\n            return false\n          }\n        }\n\n      }\n    }\n\n    return  true\n  }\n\n\n  clearTetromino()\n  {\n    const n = this.currentTet.matrix.length\n    for (let y = 0;y < n;y++)\n    {\n      for (let x = 0; x < n; x++)\n      {\n        const boardXOffset = this.currentTet.x + x\n        const boardYOffset = this.currentTet.y + y\n        if (this.currentTet.matrix[y][x] !== 'E') this.gameBoard[boardYOffset][boardXOffset] = 'E'\n      }\n    }\n  }\n\n  insertTetromino()\n  {\n    const n = this.currentTet.matrix.length\n    for (let y = 0; y < n; y++)\n    {\n      for (let x = 0; x < n; x++)\n      {\n        const boardXOffset = this.currentTet.x + x\n        const boardYOffset = this.currentTet.y + y\n        if (this.currentTet.matrix[y][x] !== 'E') this.gameBoard[boardYOffset][boardXOffset] = this.currentTet.matrix[y][x] //inital check will make sure not out of bounds\n\n      }\n    }\n  }\n\n\n\n  handleRotation()\n  {\n    this.clearTetromino();\n\n    let copyPiece = new Tetromino()\n    copyPiece.x = this.currentTet.x\n    copyPiece.y = this.currentTet.y\n    copyPiece.matrix = this.currentTet.matrix\n    copyPiece.orientation = this.currentTet.orientation\n\n    copyPiece.rotate()\n\n    if ((this.validMove(copyPiece)) && (this.bottomEmpty(copyPiece))){\n      this.currentTet.rotate()\n    }\n\n    this.redrawPiece()\n\n  }\n\n\n  bottomEmpty(piece)\n  {\n    const n = piece.matrix.length\n\n    for (let y = 0;y < n;y++)\n    {\n      for (let x = 0; x < n; x++)\n      {\n        const boardXOffset = piece.x + x;\n        const boardYOffsetBelow = piece.y + y + 1;\n\n\n        if (piece.matrix[y][x] !== 'E')\n        {\n\n          //try to get gameboard at board offsets, if exception, then piece is out of bounds\n          try {\n            const bounds = this.gameBoard[boardYOffsetBelow][boardXOffset]\n            if (bounds !== 'E') return false\n\n          } catch (e) {\n            return false\n          }\n        }\n      }\n    }\n\n    return true\n\n  }\n\n  checkRows()\n  {\n      let gameBoardCopy = this.gameBoard\n\n      for (let row = this.rows-1 ; row >= 0;row--)\n      {\n        let filteredRow = (gameBoardCopy[row]).filter((val) => {return val === 'E'})\n\n        if (filteredRow.length === 0)\n        {\n          this.gameBoard.splice(row, 1)\n          const rowsTemp = Array(this.columns).fill('E')\n          this.gameBoard.unshift(rowsTemp)\n          this.score += 100\n          row++\n        }\n      }\n\n    this.renderGameBoard()\n  }\n\n  spawnTetromino()\n  {\n    this.checkRows()\n    this.score += 10\n\n    const tetrominos = [new TetrominoI(), new TetrominoJ(), new TetrominoL(), new TetrominoS(), new TetrominoZ(), new TetrominoO(), new TetrominoT()]\n\n    let newTet = tetrominos[Math.floor(Math.random()*tetrominos.length)];\n    if (!this.validMove(newTet)) {\n      this.resetGameBoard()\n    }\n\n    this.currentTet = newTet\n\n    this.insertTetromino()\n  }\n\n  makeMove(direction)\n  {\n    this.clearTetromino()\n    let copyPiece = new Tetromino()\n    copyPiece.x = this.currentTet.x\n    copyPiece.y = this.currentTet.y\n    copyPiece.matrix = this.currentTet.matrix\n\n    switch(direction) {\n      case KEY.DOWN:\n        copyPiece.moveDown()\n\n        if (this.validMove(copyPiece))\n        {\n          this.currentTet.moveDown()\n        }\n\n        break;\n      case KEY.RIGHT:\n        copyPiece.moveRight()\n        if (this.validMove(copyPiece))\n        {\n          this.currentTet.moveRight()\n        }\n        break;\n      case KEY.LEFT:\n        copyPiece.moveLeft()\n        if (this.validMove(copyPiece))\n        {\n          this.currentTet.moveLeft()\n        }\n        break;\n    }\n\n    if (!this.bottomEmpty(this.currentTet))\n    {\n      this.insertTetromino()\n      this.spawnTetromino()\n    }\n    else\n    {\n      this.redrawPiece()\n    }\n\n  }\n\n\n\n\n  keyDown(ev) {\n      switch(ev.keyCode) {\n        case KEY.UP:\n          this.handleRotation();\n          break;\n        case KEY.DOWN:\n          this.makeMove(KEY.DOWN);\n          break;\n        case KEY.RIGHT:\n          this.makeMove(KEY.RIGHT);\n          break;\n        case KEY.LEFT:\n          this.makeMove(KEY.LEFT);\n          break;\n      }\n  }\n\n  run()\n  {\n    this.currentTet = new TetrominoL()\n\n    this.insertTetromino()\n\n\n    this.renderGameBoard()\n    window.animateLoop = () => {\n\n\n      setTimeout(() => {\n        requestAnimationFrame(animateLoop);\n\n        this.makeMove(KEY.DOWN)\n        this.renderGameBoard()\n\n\n      }, 1000 / this.speed);\n    }\n\n    animateLoop()\n  }\n\n}\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","export class Tetromino {\n\n  constructor() {\n    this.orientation = 'u'\n    this.matrix = []\n    this.x = 3\n    this.y = 1\n  }\n\n  rotate()\n  {\n    const n = this.matrix.length\n\n    let newArray = Array(n).fill().map(()=> []);\n    \n\n    for(let y = 0; y < n;y++) {\n        for(let x = 0; x < n; x++) {\n          newArray[y][x] = this.matrix[n - x - 1][y];\n        }\n    }\n\n    this.matrix = newArray\n\n    newArray = []\n    this.updateOrientation()\n\n  }\n  \n\n  updateOrientation()\n  {\n    const orientationArray = ['u','r','d','l']\n    const oldOrientation = this.orientation\n    \n    const newOrientIndex = (orientationArray.indexOf(oldOrientation)+1) % 4;\n    this.orientation = orientationArray[newOrientIndex]\n  }\n\n  \n  moveRight(){this.x += 1}\n  moveLeft(){this.x -= 1}\n  moveDown(){this.y += 1}\n\n\n\n\n}\n\nexport class TetrominoL extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'B'\n    this.matrix = [\n        ['B','E','E'],\n        ['B','B','B'],\n        ['E','E','E']\n    ]\n  }\n}\n\nexport class TetrominoJ extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'J'\n    this.matrix = [\n      ['E','E','O'],\n      ['O','O','O'],\n      ['E','E','E']\n    ]\n  }\n}\n\nexport class TetrominoZ extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'R'\n    this.matrix = [\n      ['R','R','E'],\n      ['E','R','R'],\n      ['E','E','E']\n    ]\n  }\n}\n\nexport class TetrominoS extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'G'\n    this.matrix = [\n      ['E','G','G'],\n      ['G','G','E'],\n      ['E','E','E']\n    ]\n  }\n}\n\nexport class TetrominoI extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'C'\n    this.matrix = [\n      ['E','E','E','E'],\n      ['C','C','C','C'],\n      ['E','E','E','E'],\n      ['E','E','E','E']\n    ]\n  }\n}\n\nexport class TetrominoO extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'Y'\n    this.matrix = [\n      ['Y','Y'],\n      ['Y','Y']\n    ]\n  }\n\n  rotate()\n  {\n    // do nothing\n  }\n}\n\nexport class TetrominoT extends Tetromino\n{\n  constructor() {\n    super()\n    this.colour = 'P'\n    this.matrix = [\n      ['P','P','P'],\n      ['E','P','E'],\n      ['E','E','E']\n    ]\n  }\n  \n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Tetrominos.js\n **/"],"sourceRoot":""}