!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("Tetris",[],e):"object"==typeof exports?exports.Tetris=e():t.Tetris=e()}(this,function(){return function(t){function e(r){if(o[r])return o[r].exports;var n=o[r]={exports:{},id:r,loaded:!1};return t[r].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var o={};return e.m=t,e.c=o,e.p="",e(0)}([function(t,e){"use strict";function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0});var r=function(){function t(t,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,o,r){return o&&t(e.prototype,o),r&&t(e,r),e}}(),n=function(){function t(e){o(this,t),this.ctx=e.getContext("2d"),this.scaleFactor=50,this.rows=20,this.columns=10,this.gameBoard=[];for(var r=["E"];this.gameBoard.length<this.columns;this.gameBoard.push(r));}return r(t,[{key:"drawRect",value:function(t,e,o){var r=t*this.scaleFactor,n=e*this.scaleFactor;this.ctx.fillStyle=o,this.ctx.fillRect(r,n,scaleFactor,scaleFactor),this.ctx.strokeStyle="white",this.ctx.lineWidth=.5,this.ctx.strokeRect(r,n,scaleFactor,scaleFactor)}},{key:"run",value:function(){console.log(this.gameBoard[20][0])}}]),t}();e["default"]=n,t.exports=e["default"]}])});
//# sourceMappingURL=Tetris.min.js.map